gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  1


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.6.0 #9615 (MINGW32)
                      00004 ;--------------------------------------------------------
                      00005 ; PIC16 port for the Microchip 16-bit core micros
                      00006 ;--------------------------------------------------------
                      00007         list    p=18f4520
                      00008         radix   dec
                      00009 
                      00010 
                      00011 ;--------------------------------------------------------
                      00012 ; public variables in this module
                      00013 ;--------------------------------------------------------
  0000                00014         global  _EnviaComando
  0000                00015         global  _EnviaDados
  0000                00016         global  _InicializaLCD
  0000                00017         global  _Delay40us
  0000                00018         global  _Delay2ms
                      00019 
                      00020 ;--------------------------------------------------------
                      00021 ;       Equates to used internal registers
                      00022 ;--------------------------------------------------------
  00000FD8            00023 STATUS  equ     0xfd8
  00000FE1            00024 FSR1L   equ     0xfe1
  00000FD9            00025 FSR2L   equ     0xfd9
  00000FEF            00026 INDF0   equ     0xfef
  00000FE6            00027 POSTINC1        equ     0xfe6
  00000FE5            00028 POSTDEC1        equ     0xfe5
  00000FE4            00029 PREINC1 equ     0xfe4
  00000FDB            00030 PLUSW2  equ     0xfdb
                      00031 
                      00032 
                      00033 ; Internal registers
                      00034 .registers      udata_ovr       0x0000
000000                00035 r0x00   res     1
000001                00036 r0x01   res     1
                      00037 
                      00038 ;--------------------------------------------------------
                      00039 ; global & static initialisations
                      00040 ;--------------------------------------------------------
                      00041 ; I code from now on!
                      00042 ; ; Starting pCode block
                      00043 S_lcd__InicializaLCD    code
000000                00044 _InicializaLCD:
                      00045 ;       .line   75; lcd.c       void InicializaLCD(void)
000000 CFD9 FFE5      00046         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00047         MOVFF   FSR1L, FSR2L
000008 C??? F???      00048         MOVFF   r0x00, POSTDEC1
                      00049 ;       .line   80; lcd.c       Delay2ms();
00000C EC?? F0??      00050         CALL    _Delay2ms
                      00051 ;       .line   81; lcd.c       Delay2ms();
000010 EC?? F0??      00052         CALL    _Delay2ms
                      00053 ;       .line   82; lcd.c       Delay2ms();
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  2


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000014 EC?? F0??      00054         CALL    _Delay2ms
                      00055 ;       .line   83; lcd.c       Delay2ms();
000018 EC?? F0??      00056         CALL    _Delay2ms
                      00057 ;       .line   84; lcd.c       Delay2ms();
00001C EC?? F0??      00058         CALL    _Delay2ms
                      00059 ;       .line   87; lcd.c       BitClr(TRISE,RS);       //RS
000020 EE0F F096      00060         LFSR    0x00, 0xf96
000024 CFEF F000      00061         MOVFF   INDF0, r0x00
000028 90??           00062         BCF     r0x00, 0
00002A EE0F F096      00063         LFSR    0x00, 0xf96
00002E C??? F???      00064         MOVFF   r0x00, INDF0
                      00065 ;       .line   88; lcd.c       BitClr(TRISE,EN);       //EN
000032 EE0F F096      00066         LFSR    0x00, 0xf96
000036 CFEF F000      00067         MOVFF   INDF0, r0x00
00003A 92??           00068         BCF     r0x00, 1
00003C EE0F F096      00069         LFSR    0x00, 0xf96
000040 C??? F???      00070         MOVFF   r0x00, INDF0
                      00071 ;       .line   89; lcd.c       BitClr(TRISE,RW);       //RW
000044 EE0F F096      00072         LFSR    0x00, 0xf96
000048 CFEF F000      00073         MOVFF   INDF0, r0x00
00004C 94??           00074         BCF     r0x00, 2
00004E EE0F F096      00075         LFSR    0x00, 0xf96
000052 C??? F???      00076         MOVFF   r0x00, INDF0
                      00077 ;       .line   90; lcd.c       TRISD = 0x00;           //dados
000056 EE0F F095      00078         LFSR    0x00, 0xf95
00005A 0E00           00079         MOVLW   0x00
00005C 6EEF           00080         MOVWF   INDF0
                      00081 ;       .line   91; lcd.c       ADCON1 = 0b00001110;    //apenas
00005E EE0F F0C1      00082         LFSR    0x00, 0xfc1
000062 0E0E           00083         MOVLW   0x0e
000064 6EEF           00084         MOVWF   INDF0
                      00085 ;       .line   94; lcd.c       EnviaComando(0x38);     //8bits, 2 linhas, 5x8
000066 0E38           00086         MOVLW   0x38
000068 6EE5           00087         MOVWF   POSTDEC1
00006A EC?? F0??      00088         CALL    _EnviaComando
00006E 52E6           00089         MOVF    POSTINC1, F
                      00090 ;       .line   95; lcd.c       EnviaComando(0x06);     //modo incremental
000070 0E06           00091         MOVLW   0x06
000072 6EE5           00092         MOVWF   POSTDEC1
000074 EC?? F0??      00093         CALL    _EnviaComando
000078 52E6           00094         MOVF    POSTINC1, F
                      00095 ;       .line   96; lcd.c       EnviaComando(0x0C);     //display e cursor on, com blink
00007A 0E0C           00096         MOVLW   0x0c
00007C 6EE5           00097         MOVWF   POSTDEC1
00007E EC?? F0??      00098         CALL    _EnviaComando
000082 52E6           00099         MOVF    POSTINC1, F
                      00100 ;       .line   97; lcd.c       EnviaComando(0x03);     //zera tudo
000084 0E03           00101         MOVLW   0x03
000086 6EE5           00102         MOVWF   POSTDEC1
000088 EC?? F0??      00103         CALL    _EnviaComando
00008C 52E6           00104         MOVF    POSTINC1, F
                      00105 ;       .line   98; lcd.c       EnviaComando(0x01);     //limpar display
00008E 0E01           00106         MOVLW   0x01
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  3


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000090 6EE5           00107         MOVWF   POSTDEC1
000092 EC?? F0??      00108         CALL    _EnviaComando
000096 52E6           00109         MOVF    POSTINC1, F
                      00110 ;       .line   99; lcd.c       EnviaComando(0x80);     //posição inicial
000098 0E80           00111         MOVLW   0x80
00009A 6EE5           00112         MOVWF   POSTDEC1
00009C EC?? F0??      00113         CALL    _EnviaComando
0000A0 52E6           00114         MOVF    POSTINC1, F
0000A2 CFE4 F000      00115         MOVFF   PREINC1, r0x00
0000A6 CFE4 FFD9      00116         MOVFF   PREINC1, FSR2L
0000AA 0012           00117         RETURN  
                      00118 
                      00119 ; ; Starting pCode block
                      00120 S_lcd__EnviaDados       code
000000                00121 _EnviaDados:
                      00122 ;       .line   60; lcd.c       void EnviaDados(unsigned char valor)
000000 CFD9 FFE5      00123         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00124         MOVFF   FSR1L, FSR2L
000008 C??? F???      00125         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00126         MOVFF   r0x01, POSTDEC1
000010 0E02           00127         MOVLW   0x02
000012 CFDB F000      00128         MOVFF   PLUSW2, r0x00
                      00129 ;       .line   62; lcd.c       BitSet(PORTE,RS);       //dados
000016 EE0F F084      00130         LFSR    0x00, 0xf84
00001A CFEF F000      00131         MOVFF   INDF0, r0x01
00001E 80??           00132         BSF     r0x01, 0
000020 EE0F F084      00133         LFSR    0x00, 0xf84
000024 C??? F???      00134         MOVFF   r0x01, INDF0
                      00135 ;       .line   63; lcd.c       BitClr(PORTE,RW);       // habilita escrita
000028 EE0F F084      00136         LFSR    0x00, 0xf84
00002C CFEF F000      00137         MOVFF   INDF0, r0x01
000030 94??           00138         BCF     r0x01, 2
000032 EE0F F084      00139         LFSR    0x00, 0xf84
000036 C??? F???      00140         MOVFF   r0x01, INDF0
                      00141 ;       .line   66; lcd.c       PORTD = valor;
00003A EE0F F083      00142         LFSR    0x00, 0xf83
00003E C??? F???      00143         MOVFF   r0x00, INDF0
                      00144 ;       .line   67; lcd.c       BitSet(PORTE,EN);//habilita leitura
000042 EE0F F084      00145         LFSR    0x00, 0xf84
000046 CFEF F000      00146         MOVFF   INDF0, r0x00
00004A 82??           00147         BSF     r0x00, 1
00004C EE0F F084      00148         LFSR    0x00, 0xf84
000050 C??? F???      00149         MOVFF   r0x00, INDF0
                      00150 ;       .line   68; lcd.c       Delay40us();
000054 EC?? F0??      00151         CALL    _Delay40us
                      00152 ;       .line   69; lcd.c       BitClr(PORTE,EN);//termina leitura
000058 EE0F F084      00153         LFSR    0x00, 0xf84
00005C CFEF F000      00154         MOVFF   INDF0, r0x00
000060 92??           00155         BCF     r0x00, 1
000062 EE0F F084      00156         LFSR    0x00, 0xf84
000066 C??? F???      00157         MOVFF   r0x00, INDF0
                      00158 ;       .line   70; lcd.c       BitClr(PORTE,RS);       //deixa em nivel baixo
00006A EE0F F084      00159         LFSR    0x00, 0xf84
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  4


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

00006E CFEF F000      00160         MOVFF   INDF0, r0x00
000072 90??           00161         BCF     r0x00, 0
000074 EE0F F084      00162         LFSR    0x00, 0xf84
000078 C??? F???      00163         MOVFF   r0x00, INDF0
                      00164 ;       .line   71; lcd.c       BitClr(PORTE,RW);       //deixa em nivel baixo
00007C EE0F F084      00165         LFSR    0x00, 0xf84
000080 CFEF F000      00166         MOVFF   INDF0, r0x00
000084 94??           00167         BCF     r0x00, 2
000086 EE0F F084      00168         LFSR    0x00, 0xf84
00008A C??? F???      00169         MOVFF   r0x00, INDF0
                      00170 ;       .line   72; lcd.c       Delay40us();
00008E EC?? F0??      00171         CALL    _Delay40us
000092 CFE4 F000      00172         MOVFF   PREINC1, r0x01
000096 CFE4 F000      00173         MOVFF   PREINC1, r0x00
00009A CFE4 FFD9      00174         MOVFF   PREINC1, FSR2L
00009E 0012           00175         RETURN  
                      00176 
                      00177 ; ; Starting pCode block
                      00178 S_lcd__EnviaComando     code
000000                00179 _EnviaComando:
                      00180 ;       .line   46; lcd.c       void EnviaComando(unsigned char cmd)
000000 CFD9 FFE5      00181         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00182         MOVFF   FSR1L, FSR2L
000008 C??? F???      00183         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00184         MOVFF   r0x01, POSTDEC1
000010 0E02           00185         MOVLW   0x02
000012 CFDB F000      00186         MOVFF   PLUSW2, r0x00
                      00187 ;       .line   48; lcd.c       BitClr(PORTE,RS);       //comando
000016 EE0F F084      00188         LFSR    0x00, 0xf84
00001A CFEF F000      00189         MOVFF   INDF0, r0x01
00001E 90??           00190         BCF     r0x01, 0
000020 EE0F F084      00191         LFSR    0x00, 0xf84
000024 C??? F???      00192         MOVFF   r0x01, INDF0
                      00193 ;       .line   49; lcd.c       BitClr(PORTE,RW);       // habilita escrita
000028 EE0F F084      00194         LFSR    0x00, 0xf84
00002C CFEF F000      00195         MOVFF   INDF0, r0x01
000030 94??           00196         BCF     r0x01, 2
000032 EE0F F084      00197         LFSR    0x00, 0xf84
000036 C??? F???      00198         MOVFF   r0x01, INDF0
                      00199 ;       .line   51; lcd.c       PORTD = cmd;
00003A EE0F F083      00200         LFSR    0x00, 0xf83
00003E C??? F???      00201         MOVFF   r0x00, INDF0
                      00202 ;       .line   52; lcd.c       BitSet(PORTE,EN);//habilita leitura
000042 EE0F F084      00203         LFSR    0x00, 0xf84
000046 CFEF F000      00204         MOVFF   INDF0, r0x00
00004A 82??           00205         BSF     r0x00, 1
00004C EE0F F084      00206         LFSR    0x00, 0xf84
000050 C??? F???      00207         MOVFF   r0x00, INDF0
                      00208 ;       .line   53; lcd.c       Delay2ms();
000054 EC?? F0??      00209         CALL    _Delay2ms
                      00210 ;       .line   54; lcd.c       BitClr(PORTE,EN);//termina leitura
000058 EE0F F084      00211         LFSR    0x00, 0xf84
00005C CFEF F000      00212         MOVFF   INDF0, r0x00
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  5


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000060 92??           00213         BCF     r0x00, 1
000062 EE0F F084      00214         LFSR    0x00, 0xf84
000066 C??? F???      00215         MOVFF   r0x00, INDF0
                      00216 ;       .line   55; lcd.c       BitClr(PORTE,RS);       //deixa em nivel baixo
00006A EE0F F084      00217         LFSR    0x00, 0xf84
00006E CFEF F000      00218         MOVFF   INDF0, r0x00
000072 90??           00219         BCF     r0x00, 0
000074 EE0F F084      00220         LFSR    0x00, 0xf84
000078 C??? F???      00221         MOVFF   r0x00, INDF0
                      00222 ;       .line   56; lcd.c       BitClr(PORTE,RW);       //deixa em nivel baixo
00007C EE0F F084      00223         LFSR    0x00, 0xf84
000080 CFEF F000      00224         MOVFF   INDF0, r0x00
000084 94??           00225         BCF     r0x00, 2
000086 EE0F F084      00226         LFSR    0x00, 0xf84
00008A C??? F???      00227         MOVFF   r0x00, INDF0
                      00228 ;       .line   57; lcd.c       Delay2ms();
00008E EC?? F0??      00229         CALL    _Delay2ms
000092 CFE4 F000      00230         MOVFF   PREINC1, r0x01
000096 CFE4 F000      00231         MOVFF   PREINC1, r0x00
00009A CFE4 FFD9      00232         MOVFF   PREINC1, FSR2L
00009E 0012           00233         RETURN  
                      00234 
                      00235 ; ; Starting pCode block
                      00236 S_lcd__Delay2ms code
000000                00237 _Delay2ms:
                      00238 ;       .line   36; lcd.c       void Delay2ms(void)
000000 CFD9 FFE5      00239         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00240         MOVFF   FSR1L, FSR2L
000008 C??? F???      00241         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00242         MOVFF   r0x01, POSTDEC1
                      00243 ;       .line   39; lcd.c       for(i=0; i < 200; i++)
000010 0EC8           00244         MOVLW   0xc8
000012 6E??           00245         MOVWF   r0x00
000014                00246 _00117_DS_:
                      00247 ;       .line   41; lcd.c       Delay40us();
000014 EC?? F0??      00248         CALL    _Delay40us
000018 04??           00249         DECF    r0x00, W
00001A 6E??           00250         MOVWF   r0x01
00001C C??? F???      00251         MOVFF   r0x01, r0x00
                      00252 ;       .line   39; lcd.c       for(i=0; i < 200; i++)
000020 50??           00253         MOVF    r0x01, W
000022 E1??           00254         BNZ     _00117_DS_
000024 CFE4 F000      00255         MOVFF   PREINC1, r0x01
000028 CFE4 F000      00256         MOVFF   PREINC1, r0x00
00002C CFE4 FFD9      00257         MOVFF   PREINC1, FSR2L
000030 0012           00258         RETURN  
                      00259 
                      00260 ; ; Starting pCode block
                      00261 S_lcd__Delay40us        code
000000                00262 _Delay40us:
                      00263 ;       .line   28; lcd.c       void Delay40us(void)
000000 CFD9 FFE5      00264         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00265         MOVFF   FSR1L, FSR2L
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  6


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000008 C??? F???      00266         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00267         MOVFF   r0x01, POSTDEC1
                      00268 ;       .line   33; lcd.c       for(i=0; i < 25; i++); //3 + 3 * 25 = 78
000010 0E19           00269         MOVLW   0x19
000012 6E??           00270         MOVWF   r0x00
000014                00271 _00108_DS_:
000014 04??           00272         DECF    r0x00, W
000016 6E??           00273         MOVWF   r0x01
000018 C??? F???      00274         MOVFF   r0x01, r0x00
00001C 50??           00275         MOVF    r0x01, W
00001E E1??           00276         BNZ     _00108_DS_
000020 CFE4 F000      00277         MOVFF   PREINC1, r0x01
000024 CFE4 F000      00278         MOVFF   PREINC1, r0x00
000028 CFE4 FFD9      00279         MOVFF   PREINC1, FSR2L
00002C 0012           00280         RETURN  
                      00281 
                      00282 
                      00283 
                      00284 ; Statistics:
                      00285 ; code size:      588 (0x024c) bytes ( 0.45%)
                      00286 ;                 294 (0x0126) words
                      00287 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00288 ; access size:      2 (0x0002) bytes
                      00289 
                      00290 
                      00291         end
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  7


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

FSR1L                             CONSTANT      00000FE1           4065
FSR2L                             CONSTANT      00000FD9           4057
INDF0                             CONSTANT      00000FEF           4079
PLUSW2                            CONSTANT      00000FDB           4059
POSTDEC1                          CONSTANT      00000FE5           4069
POSTINC1                          CONSTANT      00000FE6           4070
PREINC1                           CONSTANT      00000FE4           4068
STATUS                            CONSTANT      00000FD8           4056
_00108_DS_                        ADDRESS       00000014             20
_00117_DS_                        ADDRESS       00000014             20
_Delay2ms                         GLOBAL        00000000              0
_Delay40us                        GLOBAL        00000000              0
_EnviaComando                     GLOBAL        00000000              0
_EnviaDados                       GLOBAL        00000000              0
_InicializaLCD                    GLOBAL        00000000              0
__16_BIT                          CONSTANT      00000001              1
__18F4520                         CONSTANT      00000001              1
__ACC_RAM_LOW_END                 CONSTANT      0000007F            127
__ACC_RAM_LOW_START               CONSTANT      00000000              0
__ACTIVE_BANK_ADDR                VARIABLE      FFFFFFFF             -1
__ASSUMED_BANK_ADDR               VARIABLE      FFFFFFFF             -1
__BANK_0                          CONSTANT      00000000              0
__BANK_1                          CONSTANT      00000100            256
__BANK_2                          CONSTANT      00000200            512
__BANK_3                          CONSTANT      00000300            768
__BANK_4                          CONSTANT      00000400           1024
__BANK_5                          CONSTANT      00000500           1280
__BANK_6                          CONSTANT      00000600           1536
__BANK_7                          CONSTANT      00000700           1792
__BANK_8                          CONSTANT      00000800           2048
__BANK_9                          CONSTANT      00000900           2304
__BANK_10                         CONSTANT      00000A00           2560
__BANK_11                         CONSTANT      00000B00           2816
__BANK_12                         CONSTANT      00000C00           3072
__BANK_13                         CONSTANT      00000D00           3328
__BANK_14                         CONSTANT      00000E00           3584
__BANK_15                         CONSTANT      00000F00           3840
__BANK_BITS                       CONSTANT      00000F00           3840
__BANK_FIRST                      CONSTANT      00000000              0
__BANK_INV                        CONSTANT      FFFFFFFF             -1
__BANK_LAST                       CONSTANT      00000F00           3840
__BANK_MASK                       CONSTANT      000000FF            255
__BANK_SHIFT                      CONSTANT      00000008              8
__BANK_SIZE                       CONSTANT      00000100            256
__CODE_END                        CONSTANT      00007FFF          32767
__CODE_START                      CONSTANT      00000000              0
__COMMON_RAM_END                  CONSTANT      0000007F            127
__COMMON_RAM_START                CONSTANT      00000000              0
__CONFIG_END                      CONSTANT      0030000D        3145741
__CONFIG_START                    CONSTANT      00300000        3145728
__EEPROM_END                      CONSTANT      00F000FF       15728895
__EEPROM_START                    CONSTANT      00F00000       15728640
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   5-23-2018  17:04:22         PAGE  8


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

__EXTENDED                        CONSTANT      00000001              1
__GPUTILS_SVN_VERSION             CONSTANT      00000505           1285
__GPUTILS_VERSION_MAJOR           CONSTANT      00000001              1
__GPUTILS_VERSION_MICRO           CONSTANT      00000000              0
__GPUTILS_VERSION_MINOR           CONSTANT      00000005              5
__IDLOCS_END                      CONSTANT      00200007        2097159
__IDLOCS_START                    CONSTANT      00200000        2097152
__NUM_BANKS                       CONSTANT      00000010             16
__VECTOR_INT_HIGH                 CONSTANT      00000008              8
__VECTOR_INT_LOW                  CONSTANT      00000018             24
__VECTOR_RESET                    CONSTANT      00000000              0
__WHILE_LOOP_COUNT_MAX            CONSTANT      000000FF            255
r0x00                             STATIC        00000000              0
r0x01                             STATIC        00000001              1

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

